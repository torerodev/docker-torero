---
name: Build and Publish Docker Image

on:
  push:
    branches: 
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      torero_version:
        description: 'Torero version to build'
        required: true
        default: '1.3.0'
  schedule:
    - cron: '0 2 * * 0'  # weekly on sundays at 2am

env:
  REGISTRY: docker.io
  IMAGE_NAME: torerodev/torero

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      security-events: write  # Add this permission for SARIF uploads
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Determine Torero version
        id: versions
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "torero_version=${{ github.event.inputs.torero_version }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "torero_version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "torero_version=1.3.0" >> $GITHUB_OUTPUT
          fi
      
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
      
      - name: Set image tags
        id: meta
        run: |
          # For pull requests, use a test tag
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "image_tags=local-test:pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          else
            # For tags and pushes to main
            TAGS="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.versions.outputs.torero_version }}"
            
            # If it's the newest version or a workflow dispatch, also tag as latest
            if [[ "${{ github.ref }}" == refs/tags/v* ]] || [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
              TAGS="$TAGS,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
            fi
            
            echo "image_tags=$TAGS" >> $GITHUB_OUTPUT
          fi
      
      - name: Build and tag Docker image
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          # Don't push for PRs, only push for other events
          push: ${{ github.event_name != 'pull_request' }}
          # Load into Docker daemon for PR builds so tests can run
          load: ${{ github.event_name == 'pull_request' }}
          tags: ${{ steps.meta.outputs.image_tags }}
          labels: |
            org.opencontainers.image.source=https://github.com/torerodev/docker-torero
            org.opencontainers.image.created=${{ github.event.repository.updated_at }}
            org.opencontainers.image.revision=${{ github.sha }}
          build-args: |
            TORERO_VERSION=${{ steps.versions.outputs.torero_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Run basic tests
        run: |
          # For PRs, use the local image
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            TEST_IMAGE="local-test:pr-${{ github.event.pull_request.number }}"
          else
            TEST_IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.versions.outputs.torero_version }}"
          fi
          
          # Test Torero
          docker run --rm $TEST_IMAGE torero version
      
      - name: Test OpenTofu installation
        run: |
          # For PRs, use the local image
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            TEST_IMAGE="local-test:pr-${{ github.event.pull_request.number }}"
          else
            TEST_IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.versions.outputs.torero_version }}"
          fi
          
          # Test OpenTofu installation
          docker run --rm \
            -e INSTALL_OPENTOFU=true \
            -e OPENTOFU_VERSION=1.6.2 \
            $TEST_IMAGE \
            bash -c "tofu version || exit 0"
      
      - name: Run vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ github.event_name == 'pull_request' && format('local-test:pr-{0}', github.event.pull_request.number) || format('{0}/{1}:{2}', env.REGISTRY, env.IMAGE_NAME, steps.versions.outputs.torero_version) }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
      
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
        # Only run this step when it's likely to have proper permissions
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
      
      - name: Create release for tags
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.versions.outputs.torero_version }}
          draft: false
          prerelease: false
          generate_release_notes: true